; *****************************************************************************
; *****************************************************************************
;
;		Name :		skipper.src
;		Purpose :	$$comment $$define $$nextline
;		Author :	Paul Robson (paul@robsons.org.uk)
;		Date : 		6th January 2020
;
; *****************************************************************************
; *****************************************************************************

; *****************************************************************************
;
;			Advance to next line. (IP) must point to the current line
;
; *****************************************************************************

NextLine: 	;; $$nextline hide <0>
		advance IP							; push IP to next line.
		lda 	(IP)						; is there any following program ?
		beq 	_NLGoEnd
		ldx 	#1 							; start 3 in (-2 for Next)
		doNext
_NLGoEnd:
		jmp 	WarmStart

; *****************************************************************************
;
;							Skip a comment
;
; *****************************************************************************

SkipComment: 	;; $$comment noexec <n> 
		inx									; (IP),X points to the length.
		inx 
		txa
		tay 								; put into Y
		clc
		adc 	(IP),y 						; add the length to X
		tax 								; put back in X
		dex
		dex
		doNext 								; and skip

CommentDecoder: ;; $$comment decode
		lda 	#CTH_Keyword
		jsr 	DecodeWriteBuffer
		lda 	#"'"
		jsr 	DecodeWriteBuffer
		lda 	(srcPtr),y 					; check if there is no data
		cmp 	#1
		beq 	_CDEmpty 					; if so print nothing.
		lda 	#CTH_Comment
		jsr 	DecodeWriteBuffer
		jsr 	DecodeOutputData
		lda 	#32
		jsr 	DecodeWriteBuffer
_CDEmpty		
		rts

; *****************************************************************************
;
;			If you run into a definition it generates an error.
;
; *****************************************************************************

DefineCode:	;; $$define noexec <n>
		rerror "REACHED DEFINITION"

DefineDecoder: ;; $$define decode
		lda 	#CTH_Definition
		jsr 	DecodeWriteBuffer
		lda 	#":"
		jsr 	DecodeWriteBuffer
		jsr 	DecodeOutputData
		lda 	#32
		jsr 	DecodeWriteBuffer
		rts
