; *****************************************************************************
; *****************************************************************************
;
;		Name :		list.src
;		Purpose :	Program Listing
;		Author :	Paul Robson (paul@robsons.org.uk)
;		Date : 		9th January 2020
;
; *****************************************************************************
; *****************************************************************************

ListCode: 	;; list
		stz 	ListLowest 					; zero lowest line#
		stz 	ListLowest+1
		lda 	#20 						; show max 20 after lowest line
		sta 	ListCount
		set16	listPtr,ProgramMemory
		stx 	temp1						; S->A
		tsx
		txa
		ldx 	temp1
		cmp 	#NumberStackBase
		beq 	_LCLoop
		lda 	TOS 						; copy TOS to lowest
		sta 	ListLowest
		lda 	TOS+1
		sta 	ListLowest+1
		popTOS
_LCLoop:
		lda 	(listPtr)					; reached end ?
		beq 	_LCExit
		ldy 	#1							; >= list lowest
		lda 	(listPtr),y
		cmp 	ListLowest
		iny
		lda 	(listPtr),y
		sbc 	ListLowest+1
		bcc 	_LCNext
		set16 	bufPtr,textBuffer 			; set the text buffer
		lda 	listPtr 					; output the line.
		ldy 	listPtr+1
		sec
		jsr 	DecodeLineIntoBufPtr
		lda 	#CTH_LineNo
		jsr 	ExternColour
		ldy 	#255
_LCLoop2:
		iny
		lda 	textBuffer,y
		beq 	_LCEnd
		cmp 	#32
		bcs 	_LCPrint
		jsr 	ExternColour
		lda 	#32
_LCPrint:		
		jsr 	ExternPrint
		bra 	_LCLoop2
_LCEnd:	lda 	#13 						; new line
		jsr 	ExternPrint
		dec 	ListCount					; done all the lines allowed
		beq 	_LCExit
_LCNext:		
		advance listPtr 					; next line
		bra 	_LCLoop 					; go round again.
_LCExit:
		doNext

