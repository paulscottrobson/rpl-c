IdentifyCodeWord= $18c8
CompareTrue2	= $1233
CheckLessEq	= $1268
CheckTOSNegate	= $134e
WarmStart	= $1010
listcode	= $1866
BranchTestSucceedsNoPop= $16ce
returnStackX	= 1920
NHNoFor		= $167d
COL_YELLOW	= 3
Divide16	= $1442
matchPtr	= $c
Subtract	= $11de
WordAdd		= $15f7
AssertCode	= $19cd
ConvertToStringMain= $1b1b
Divide256	= $145e
ExternInput	= $111d
ByteWrite	= $15d9
DecodeLineIntoBufPtr= $1879
Swap		= $1568
ErrorHandler	= $1016
CGCode		= $126c
stack3High	= $103
ExternColour	= $10fa
ProgramMemory	= $4000
DecodeFoundWord	= $1912
DefineDecoder	= $1aea
CLCode		= $1250
Absolute	= $13d1
tos		= $6
FindLine	= $17de
Times256	= $1455
EndProgram	= $19ee
ClearVariableSpace= $1824
WordWrite	= $15e6
ExternInitialise= $10c3
LiteralStringDecoder= $10b2
ConvertToStringUnsigned= $1b1a
DecodeYAToBuffer= $1989
SkipComment	= $1ab8
BranchTestFails	= $16be
DecodeCurrentWord= $1944
LiteralString	= $1095
rsp		= $5
NumToInt	= $19f1
Rot		= $1598
C10		= $14c5
C16		= $14cd
C15		= $14c9
C32		= $14e2
Unary2Plus	= $13aa
C24		= $14d1
C64		= $14ea
C63		= $14e6
Constant0	= $1491
ExternPrint	= $10f0
Add		= $11cf
And		= $11f1
RunProgram	= $19a6
VarAddressHandler= $1b86
ElseHandler	= $16ac
ConvertToInteger= $1a1a
ByteRead	= $15c2
Const2Byte	= $14fe
C8		= $14c1
C3		= $14b5
C2		= $14b1
C1		= $14ad
C5		= $14bd
C4		= $14b9
ByteSwap	= $1424
IP		= 3
Unary1Minus	= $13b8
BootMsg		= $1019
stack2Low	= $102
Literal2ByteDecode= $1083
TOSNegateAlways	= $1354
CompareTrue	= $122e
IfHandler	= $16a9
ConvertToString	= $1b17
BranchTestSucceeds= $16c8
Multiply16x16	= $1362
TestDup		= $1556
COL_CYAN	= 6
GetIndex	= $1688
RplBuild	= $1000
Nip		= $1593
returnStackLow	= $700
VarAddrHandlerDecode= $1b9b
WarmStartBlankStack= $100d
ForHandler	= $1624
ExternSave	= $1147
VarWriteHandlerDecode= $1bd3
VarReadHandlerDecode= $1bb7
RandomSeed	= $19
DefineCode	= $1adb
ExternCheckBreak= $10dc
VarWriteHandler	= $1bbc
Const1Byte	= $14d5
WordRead	= $15cb
NextHandler	= $1652
Unary1Plus	= $13a1
CheckEqual	= $121b
CheckNotEqual	= $1218
Modulus16x16	= $12c4
BranchAlways	= $16d0
ClrHandler	= $181e
CheckLess	= $124f
Minimum		= $1284
CheckGreater	= $126b
CallHandler	= $16d8
nextFreeMem	= $e
VHOutVarChar	= $1cc8
COL_WHITE	= 7
CheckGreaterEq	= $124c
RepeatHandler	= $16b2
srcPtr		= $8
CompareFalse2	= $1243
COL_MAGENTA	= 5
VarHandlerDecode= $1c86
DecodeWriteBuffer= $1967
BranchIfZero	= $16b8
IntegerNegateAlways= $133a
CheckIntegerNegate= $1334
CallHandlerDecode= $1794
stack3Low	= $104
temp3		= $14
temp2		= $12
temp1		= $10
temp4		= $16
Call6502	= $19b6
NewHandler	= $1815
NumberStackBase	= $80
RandomNumber	= $1467
LogOr		= $120b
C32768		= $1541
C32767		= $1535
EXPrintString	= $11b8
azVariables	= $600
UnaryTrue	= $1402
C512		= $1511
Divide8		= $1446
Divide4		= $144a
Divide2		= $144e
AllocateMemory	= $160e
bufPtr		= $a
COL_BLUE	= 4
UntilHandler	= $16b5
VarReadHandler	= $1ba0
Next		= $0
MinMaxCode	= $128a
OneComplement	= $13e8
DecodeOutputData= $1970
CTNNoChange	= $1361
returnStack	= $700
StopCode	= $19e6
SignCount	= $18
Drop		= $154d
returnStackHigh	= 1856
VariableFind	= $1bd8
BreakCmd	= $1862
ConstantMinus1	= $149e
ReturnHandler	= $175d
ExitDump	= $185c
Dup		= $155f
AdvanceFreeMem	= $1851
IntToString	= $1afd
COL_GREEN	= 2
CECode		= $121c
Maximum		= $1288
C1024		= $151d
stack2High	= $101
Divide16x16	= $12b3
textBuffer	= $810
Unary2Minus	= $13c3
C4096		= $1529
COL_BLACK	= 0
Times8		= $1433
Times2		= $143b
Times4		= $1437
AdvanceToNext	= $18fc
CheckZero	= $140b
CommentDecoder	= $1ac3
SignTOS		= $1413
ExternLoad	= $117d
IntegerDivide	= $12d9
InitialiseCoreCode= $105c
CheckMinus	= $13f7
UnaryFalse	= $13fb
Over		= $157b
Literal2Byte	= $106d
NextLine	= $1aa1
Times16		= $142f
Dictionary	= $1cd9
EndIfHandler	= $16af
C255		= $14fa
C256		= $1505
hashTableSize	= 16
EXGetLength	= $11af
C100		= $14ee
C128		= $14f6
C127		= $14f2
CompareFalse	= $123e
COL_RVS		= 8
COL_RED		= 1
Negate		= $13d8
Xor		= $11fe
hashTable	= $640
