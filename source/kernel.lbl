IdentifyCodeWord= $10a9
CompareTrue2	= $11ce
CheckLessEq	= $1203
CheckTOSNegate	= $12e9
WarmStart	= $1a42
listcode	= $1065
BranchTestSucceedsNoPop= $1669
returnStackX	= 1920
NHNoFor		= $1618
Divide16	= $13dd
matchPtr	= $c
Subtract	= $1179
WordAdd		= $1592
AssertCode	= $1797
Divide256	= $13f9
ByteWrite	= $1574
DecodeLineIntoBufPtr= $1077
Swap		= $1503
ErrorHandler	= $1a45
CGCode		= $1207
stack3High	= $103
ProgramMemory	= $4000
DecodeFoundWord	= $10f3
DefineDecoder	= $18b4
CLCode		= $11eb
Absolute	= $136c
tos		= $6
Times256	= $13f0
EndProgram	= $17b8
ClearVariableSpace= $173e
WordWrite	= $1581
LiteralStringDecoder= $1054
ConvertToStringUnsigned= $18e4
SkipComment	= $1882
BranchTestFails	= $1659
DecodeCurrentWord= $1125
LiteralString	= $1037
rsp		= $5
NumToInt	= $17bb
Rot		= $1533
C10		= $1460
C16		= $1468
C15		= $1464
C32		= $147d
Unary2Plus	= $1345
C24		= $146c
C64		= $1485
C63		= $1481
Constant0	= $142c
Add		= $116a
And		= $118c
VarAddressHandler= $1951
ElseHandler	= $1647
ConvertToInteger= $17e4
ByteRead	= $155d
Const2Byte	= $1499
C8		= $145c
C3		= $1450
C2		= $144c
C1		= $1448
C5		= $1458
C4		= $1454
ByteSwap	= $13bf
h1		= $1074
IP		= 3
Unary1Minus	= $1353
stack2Low	= $102
TOSNegateAlways	= $12ef
CompareTrue	= $11c9
IfHandler	= $1644
ConvertToString	= $18e1
BranchTestSucceeds= $1663
Multiply16x16	= $12fd
TestDup		= $14f1
GetIndex	= $1623
RplBuild	= $1000
Nip		= $152e
returnStackLow	= $700
ForHandler	= $15bf
RandomSeed	= $1b
DefineCode	= $18a5
VarWriteHandler	= $197d
Const1Byte	= $1470
WordRead	= $1566
NextHandler	= $15ed
Unary1Plus	= $133c
CheckEqual	= $11b6
CheckNotEqual	= $11b3
Modulus16x16	= $125f
BranchAlways	= $166b
ClrHandler	= $1738
CheckLess	= $11ea
Minimum		= $121f
CheckGreater	= $1206
CallHandler	= $1673
nextFreeMem	= $e
CheckGreaterEq	= $11e7
RepeatHandler	= $164d
srcPtr		= $8
CompareFalse2	= $11de
DecodeWriteBuffer= $1148
BranchIfZero	= $1653
IntegerNegateAlways= $12d5
CheckIntegerNegate= $12cf
stack3Low	= $104
temp3		= $16
temp2		= $14
temp1		= $12
temp4		= $18
Call6502	= $1780
NewHandler	= $172f
RandomNumber	= $1402
LogOr		= $11a6
C32768		= $14dc
C32767		= $14d0
azVariables	= $600
UnaryTrue	= $139d
C512		= $14ac
Divide8		= $13e1
Divide4		= $13e5
Divide2		= $13e9
AllocateMemory	= $15a9
bufPtr		= $a
UntilHandler	= $1650
VarReadHandler	= $1966
Next		= $0
MinMaxCode	= $1225
OneComplement	= $1383
DecodeOutputData= $1151
CTNNoChange	= $12fc
returnStack	= $700
StopCode	= $17b0
SignCount	= $1a
Drop		= $14e8
returnStackHigh	= 1856
VariableFind	= $1994
BreakCmd	= $177c
ConstantMinus1	= $1439
ReturnHandler	= $16f8
ExitDump	= $1776
Dup		= $14fa
AdvanceFreeMem	= $176b
IntToString	= $18c7
CECode		= $11b7
Maximum		= $1223
C1024		= $14b8
CTSMain		= $18e5
stack2High	= $101
Divide16x16	= $124e
textBuffer	= $810
Unary2Minus	= $135e
C4096		= $14c4
Times8		= $13ce
Times2		= $13d6
Times4		= $13d2
AdvanceToNext	= $10dd
CheckZero	= $13a6
CommentDecoder	= $188d
SignTOS		= $13ae
IntegerDivide	= $1274
InitialiseCoreCode= $1010
CheckMinus	= $1392
UnaryFalse	= $1396
Over		= $1516
Literal2Byte	= $1021
NextLine	= $186b
Times16		= $13ca
freeMemory	= $10
Dictionary	= $1a48
EndIfHandler	= $164a
C255		= $1495
C256		= $14a0
hashTableSize	= 16
C100		= $1489
C128		= $1491
C127		= $148d
CompareFalse	= $11d9
Negate		= $1373
Xor		= $1199
hashTable	= $640
