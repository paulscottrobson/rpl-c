IdentifyCodeWord= $18c6
CompareTrue2	= $1244
CheckLessEq	= $1279
CheckTOSNegate	= $135f
WarmStart	= $1010
ListCode	= $19a4
BranchTestSucceedsNoPop= $16df
returnStackX	= 1920
NHNoFor		= $168e
COL_YELLOW	= 3
Divide16	= $1453
matchPtr	= $c
Subtract	= $11ef
WordAdd		= $1608
AssertCode	= $1a48
ConvertToStringMain= $1be7
Divide256	= $146f
ExternInput	= $1133
ByteWrite	= $15ea
DecodeLineIntoBufPtr= $1877
Swap		= $1579
ErrorHandler	= $101d
CGCode		= $127d
CTH_LineNo	= 2
stack3High	= $103
ExternColour	= $1110
ProgramMemory	= $4000
DecodeFoundWord	= $1910
DefineDecoder	= $1bb6
CLCode		= $1261
Absolute	= $13e2
tos		= $6
FindLine	= $17ef
Times256	= $1466
EndProgram	= $1a69
ClearVariableSpace= $1835
WordWrite	= $15f7
CTH_String	= 5
ExternInitialise= $10d9
LiteralStringDecoder= $10c8
ConvertToStringUnsigned= $1be6
DecodeYAToBuffer= $1987
SkipComment	= $1b84
BranchTestFails	= $16cf
DecodeCurrentWord= $1942
LiteralString	= $10ab
rsp		= $5
NumToInt	= $1abd
Rot		= $15a9
C10		= $14d6
C16		= $14de
C15		= $14da
C32		= $14f3
Unary2Plus	= $13bb
C24		= $14e2
C64		= $14fb
C63		= $14f7
CTH_Keyword	= 6
Constant0	= $14a2
ExternPrint	= $1106
Add		= $11e0
And		= $1202
RunProgram	= $1a21
VarAddressHandler= $1c52
ElseHandler	= $16bd
ConvertToInteger= $1ae6
ByteRead	= $15d3
Const2Byte	= $150f
C8		= $14d2
C3		= $14c6
C2		= $14c2
C1		= $14be
C5		= $14ce
C4		= $14ca
ByteSwap	= $1435
IP		= 3
Unary1Minus	= $13c9
BootMsg		= $1020
stack2Low	= $102
Literal2ByteDecode= $1099
TOSNegateAlways	= $1365
CompareTrue	= $123f
IfHandler	= $16ba
ConvertToString	= $1be3
BranchTestSucceeds= $16d9
Multiply16x16	= $1373
TestDup		= $1567
COL_CYAN	= 6
GetIndex	= $1699
RplBuild	= $1000
Nip		= $15a4
returnStackLow	= $700
VarAddrHandlerDecode= $1c67
WarmStartBlankStack= $100d
ForHandler	= $1635
ExternSave	= $1158
VarWriteHandlerDecode= $1c9f
listPtr		= $18
VarReadHandlerDecode= $1c83
ListCount	= $1d
VlistCode	= $1a6c
RandomSeed	= $1b
DefineCode	= $1ba7
ExternCheckBreak= $10f2
VarWriteHandler	= $1c88
Const1Byte	= $14e6
WordRead	= $15dc
NextHandler	= $1663
Unary1Plus	= $13b2
CTH_Call	= 3
CheckEqual	= $122c
CheckNotEqual	= $1229
Modulus16x16	= $12d5
BranchAlways	= $16e1
ClrHandler	= $182f
CheckLess	= $1260
Minimum		= $1295
CheckGreater	= $127c
CallHandler	= $16e9
nextFreeMem	= $e
VHOutVarChar	= $1d94
COL_WHITE	= 7
CheckGreaterEq	= $125d
RepeatHandler	= $16c3
srcPtr		= $8
CompareFalse2	= $1254
COL_MAGENTA	= 5
VarHandlerDecode= $1d52
DecodeWriteBuffer= $1965
BranchIfZero	= $16c9
IntegerNegateAlways= $134b
CheckIntegerNegate= $1345
CallHandlerDecode= $17a5
stack3Low	= $104
temp3		= $14
temp2		= $12
temp1		= $10
temp4		= $16
Call6502	= $1a31
NewHandler	= $1826
NumberStackBase	= $80
RandomNumber	= $1478
LogOr		= $121c
C32768		= $1552
C32767		= $1546
EXPrintString	= $11c9
azVariables	= $600
UnaryTrue	= $1413
C512		= $1522
Divide8		= $1457
Divide4		= $145b
Divide2		= $145f
AllocateMemory	= $161f
bufPtr		= $a
COL_BLUE	= 4
UntilHandler	= $16c6
VarReadHandler	= $1c6c
Next		= $0
MinMaxCode	= $129b
CTH_Definition	= 7
OneComplement	= $13f9
DecodeOutputData= $196e
CTNNoChange	= $1372
returnStack	= $700
StopCode	= $1a61
SignCount	= $1a
Drop		= $155e
returnStackHigh	= 1856
CTH_Comment	= 11
VariableFind	= $1ca4
BreakCmd	= $1873
ConstantMinus1	= $14af
ReturnHandler	= $176e
ExitDump	= $186d
Dup		= $1570
AdvanceFreeMem	= $1862
IntToString	= $1bc9
COL_GREEN	= 2
CECode		= $122d
Maximum		= $1299
C1024		= $152e
stack2High	= $101
Divide16x16	= $12c4
textBuffer	= $810
Unary2Minus	= $13d4
C4096		= $153a
COL_BLACK	= 0
Times8		= $1444
Times2		= $144c
Times4		= $1448
AdvanceToNext	= $18fa
CheckZero	= $141c
CommentDecoder	= $1b8f
SignTOS		= $1424
ExternLoad	= $118e
IntegerDivide	= $12ea
InitialiseCoreCode= $1072
CheckMinus	= $1408
UnaryFalse	= $140c
Over		= $158c
Literal2Byte	= $1083
NextLine	= $1b6d
Times16		= $1440
ListLowest	= $1e
Dictionary	= $1da5
EndIfHandler	= $16c0
C255		= $150b
C256		= $1516
hashTableSize	= 16
EXGetLength	= $11c0
C100		= $14ff
C128		= $1507
C127		= $1503
CompareFalse	= $124f
COL_RVS		= 8
COL_RED		= 1
Negate		= $13e9
Xor		= $120f
hashTable	= $640
